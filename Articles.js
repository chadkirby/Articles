// Generated by CoffeeScript 1.3.3
(function() {
  var articles, articlize, find,
    __slice = [].slice;

  articles = require('./articledata');

  find = function(word, obj, article) {
    var key, _ref;
    if (obj == null) {
      obj = articles;
    }
    if (article == null) {
      article = 'a';
    }
    if (word == null) {
      return article;
    }
    key = word[0];
    obj = obj[key];
    if ((key != null) && (obj != null)) {
      return find(word.slice(1), obj, (_ref = obj.article) != null ? _ref : article);
    } else {
      return article;
    }
  };

  articlize = function() {
    var input, inputs, out;
    inputs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    out = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = inputs.length; _i < _len; _i++) {
        input = inputs[_i];
        if (input != null) {
          _results.push("" + (find(input)) + " " + input);
        }
      }
      return _results;
    })();
    if (inputs.length === 1) {
      return out[0];
    } else {
      return out;
    }
  };

  module.exports = {
    find: find,
    articlize: articlize
  };

}).call(this);
